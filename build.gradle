plugins {
  id 'java-library'
  id 'application'
  id 'de.undercouch.download' version '5.3.0'
  id 'org.mikeneck.graalvm-native-image' version '1.4.1'
  id 'com.github.ben-manes.versions' version '0.45.0'
}

archivesBaseName = 'pq'
version = '0.1.0-SNAPSHOT'

repositories {
  mavenLocal()
  mavenCentral()
  maven {
    url = 'https://oss.sonatype.org/content/repositories/snapshots'
  }
}

java {
  toolchain {
    languageVersion = JavaLanguageVersion.of(17)
  }
}

test {
  useJUnitPlatform()
  
  reports {
    html.required = true
  }
}

javadoc.options {
  addStringOption('-release', '17')
}

compileJava {
  options.compilerArgs << '-Xlint:unchecked'
  options.compilerArgs << '-Xlint:rawtypes'
  options.compilerArgs << '--enable-preview'
  options.release = 17
}

compileTestJava {
  options.compilerArgs << '-Xlint:unchecked'
  options.compilerArgs << '-Xlint:rawtypes'
  options.compilerArgs << '--enable-preview'
  options.release = 17
}

dependencies {
  implementation('info.picocli:picocli:4.7.1')
  implementation('org.apache.parquet:parquet-avro:1.12.3')
  implementation('org.apache.hadoop:hadoop-client:3.3.2') {
    exclude group: 'org.apache.avro', module: 'avro'
    exclude group: 'com.fasterxml.jackson.core', module: 'jackson-databind'
    exclude group: 'org.apache.kerby', module: 'kerb-core'
    exclude group: 'org.apache.curator', module: 'curator-recipes'
    exclude group: 'org.apache.curator', module: 'curator-client'
    exclude group: 'org.apache.hadoop', module: 'hadoop-annotations'
    exclude group: 'org.apache.hadoop.thirdparty', module: 'hadoop-shaded-protobuf_3_7'
    exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    exclude group: 'org.apache.commons', module: 'commons-text'
    exclude group: 'org.apache.commons', module: 'commons-math3'
    exclude group: 'org.apache.zookeeper', module: 'zookeeper'
    exclude group: 'org.eclipse.jetty', module: 'jetty-server'
    exclude group: 'org.eclipse.jetty', module: 'jetty-servlet'
    exclude group: 'org.eclipse.jetty', module: 'jetty-webapp'
    exclude group: 'org.eclipse.jetty', module: 'jetty-util'
    exclude group: 'javax.servlet', module: 'javax.servlet-api'
    exclude group: 'javax.servlet.jsp', module: 'jsp-api'
    exclude group: 'com.sun.jersey', module: 'jersey-json'
    exclude group: 'com.sun.jersey', module: 'jersey-core'
    exclude group: 'com.sun.jersey', module: 'jersey-servlet'
    exclude group: 'com.sun.jersey', module: 'jersey-server'
    exclude group: 'com.google.guava', module: 'guava'
    exclude group: 'com.google.code.findbugs', module: 'jsr305'
    exclude group: 'com.google.protobuf', module: 'protobuf-java'
    exclude group: 'commons-beanutils', module: 'commons-beanutils'
    exclude group: 'commons-codec', module: 'commons-codec'
    exclude group: 'commons-io', module: 'commons-io'
    exclude group: 'commons-net', module: 'commons-net'
    exclude group: 'commons-cli', module: 'commons-cli'
    exclude group: 'commons-pool', module: 'commons-pool'
    exclude group: 'ch.qos.reload4j', module: 'reload4j'
    exclude group: 'org.slf4j', module: 'slf4j-reload4j'
    exclude group: 'org.slf4j', module: 'slf4j-log4j12'
    exclude group: 'log4j', module: 'log4j'
    exclude group: 'com.jcraft', module: 'jsch'
    exclude group: 'dnsjava', module: 'dnsjava'

    exclude group: 'org.apache.kerby', module: 'kerb-simplekdc'
    exclude group: 'com.nimbusds', module: 'nimbus-jose-jwt'
    exclude group: 'net.minidev', module: 'json-smart'
    exclude group: 'org.apache.curator', module: 'curator-framework'
  }
  runtimeOnly('ch.qos.logback:logback-classic:1.2.11')

  testImplementation('org.junit.jupiter:junit-jupiter-engine:5.9.2')
  testRuntimeOnly('org.junit.platform:junit-platform-runner:1.9.2')
  testImplementation('org.mockito:mockito-core:5.1.1')
  testImplementation('org.mockito:mockito-junit-jupiter:5.1.1')
  testImplementation('org.assertj:assertj-core:3.24.2')
  testImplementation('uk.org.webcompere:system-stubs-jupiter:2.0.2')
}

application {
  mainClass = 'pq'
}

task fatJar(type: Jar) {
  manifest {
    attributes "Main-Class": "pq"
  }
  archiveClassifier = "all"
  duplicatesStrategy = "warn"
  from {
    configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
  }
  with jar
}

task downloadGraalvm(type: Download) {
  src "https://github.com/graalvm/graalvm-ce-dev-builds/releases/download/23.0.0-dev-20230303_0222/graalvm-ce-java17-linux-amd64-dev.tar.gz"
  dest new java.io.File(buildDir, "graalvm.tar.gz")
  onlyIfModified true
}

task extractGraalvm(dependsOn: downloadGraalvm, type: Exec) {
  workingDir "$buildDir"
  commandLine 'tar', 'zxvf', 'graalvm.tar.gz'
}

nativeImage {
  graalVmHome = "${buildDir}/graalvm-ce-java17-23.0.0-dev"
  mainClass = "pq"
  executableName = "pq"
  arguments(
          '--verbose',
          '--report-unsupported-elements-at-runtime',
          '--no-fallback',
          '--allow-incomplete-classpath',
          '--initialize-at-build-time=ch.qos.logback',
          '--initialize-at-run-time=com.oracle.truffle.js.scriptengine.GraalJSEngineFactory',
          '-H:IncludeResources=logback.xml',
          '-H:ReflectionConfigurationFiles=src/native-image/reflect-config.json',
          '-H:JNIConfigurationFiles=src/native-image/jni-config.json',
          '-H:ResourceConfigurationFiles=src/native-image/resource-config.json'
  )
}
