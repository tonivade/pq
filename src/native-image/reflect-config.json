[
{
  "name":"ch.qos.logback.classic.encoder.PatternLayoutEncoder",
  "queryAllPublicMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.DateConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LevelConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LineSeparatorConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.LoggerConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.MessageConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.classic.pattern.ThreadConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"ch.qos.logback.core.ConsoleAppender",
  "queryAllPublicMethods":true,
  "methods":[
    {"name":"<init>","parameterTypes":[] }, 
    {"name":"setTarget","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"ch.qos.logback.core.OutputStreamAppender",
  "methods":[{"name":"setEncoder","parameterTypes":["ch.qos.logback.core.encoder.Encoder"] }]
},
{
  "name":"ch.qos.logback.core.encoder.LayoutWrappingEncoder",
  "methods":[{"name":"setParent","parameterTypes":["ch.qos.logback.core.spi.ContextAware"] }]
},
{
  "name":"ch.qos.logback.core.pattern.PatternLayoutEncoderBase",
  "methods":[{"name":"setPattern","parameterTypes":["java.lang.String"] }]
},
{
  "name":"com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"java.io.FilePermission"
},
{
  "name":"java.lang.Object",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"java.lang.RuntimePermission"
},
{
  "name":"java.net.NetPermission"
},
{
  "name":"java.net.SocketPermission"
},
{
  "name":"java.net.URLPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]
},
{
  "name":"java.nio.file.Path"
},
{
  "name":"java.nio.file.Paths",
  "methods":[{"name":"get","parameterTypes":["java.lang.String","java.lang.String[]"] }]
},
{
  "name":"java.security.AllPermission"
},
{
  "name":"java.security.SecureRandomParameters"
},
{
  "name":"java.security.SecurityPermission"
},
{
  "name":"java.sql.Connection"
},
{
  "name":"java.sql.Driver"
},
{
  "name":"java.sql.DriverManager",
  "methods":[
    {"name":"getConnection","parameterTypes":["java.lang.String"] }, 
    {"name":"getDriver","parameterTypes":["java.lang.String"] }
  ]
},
{
  "name":"java.sql.Time",
  "methods":[{"name":"<init>","parameterTypes":["long"] }]
},
{
  "name":"java.sql.Timestamp",
  "methods":[{"name":"valueOf","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.time.Duration",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.Instant",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.LocalDate",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.LocalDateTime",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.LocalTime",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.MonthDay",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.OffsetDateTime",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.OffsetTime",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.Period",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.Year",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.YearMonth",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.time.ZoneId",
  "methods":[{"name":"of","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.time.ZoneOffset",
  "methods":[{"name":"of","parameterTypes":["java.lang.String"] }]
},
{
  "name":"java.time.ZonedDateTime",
  "methods":[{"name":"parse","parameterTypes":["java.lang.CharSequence"] }]
},
{
  "name":"java.util.PropertyPermission"
},
{
  "name":"javax.management.ObjectName"
},
{
  "name":"javax.smartcardio.CardPermission"
},
{
  "name":"org.apache.hadoop.mapred.JobConf"
},
{
  "name":"org.apache.hadoop.mapred.JobConfigurable"
},
{
  "name":"org.apache.hadoop.thirdparty.com.google.common.util.concurrent.AbstractFuture",
  "fields":[
    {"name":"listeners"}, 
    {"name":"value"}, 
    {"name":"waiters"}
  ]
},
{
  "name":"org.apache.hadoop.thirdparty.com.google.common.util.concurrent.AbstractFuture$Waiter",
  "fields":[
    {"name":"next"}, 
    {"name":"thread"}
  ]
},
{
  "name":"org.apache.parquet.column.ColumnDescriptor",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getMaxDefinitionLevel","parameterTypes":[] }, 
    {"name":"getMaxRepetitionLevel","parameterTypes":[] }, 
    {"name":"getPath","parameterTypes":[] }, 
    {"name":"getPrimitiveType","parameterTypes":[] }, 
    {"name":"getType","parameterTypes":[] }, 
    {"name":"getTypeLength","parameterTypes":[] }
  ]
},
{
  "name":"org.apache.parquet.column.Encoding",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.parquet.column.Encoding$1",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.parquet.column.Encoding$2",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.parquet.column.Encoding$5",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.parquet.column.EncodingStats",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getDataEncodings","parameterTypes":[] }, 
    {"name":"getDictionaryEncodings","parameterTypes":[] }
  ]
},
{
  "name":"org.apache.parquet.column.statistics.BinaryStatistics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getMax","parameterTypes":[] }, 
    {"name":"getMaxBytes","parameterTypes":[] }, 
    {"name":"getMin","parameterTypes":[] }, 
    {"name":"getMinBytes","parameterTypes":[] }
  ]
},
{
  "name":"org.apache.parquet.column.statistics.BooleanStatistics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getMax","parameterTypes":[] }, 
    {"name":"getMaxBytes","parameterTypes":[] }, 
    {"name":"getMin","parameterTypes":[] }, 
    {"name":"getMinBytes","parameterTypes":[] }
  ]
},
{
  "name":"org.apache.parquet.column.statistics.LongStatistics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getMax","parameterTypes":[] }, 
    {"name":"getMaxBytes","parameterTypes":[] }, 
    {"name":"getMin","parameterTypes":[] }, 
    {"name":"getMinBytes","parameterTypes":[] }
  ]
},
{
  "name":"org.apache.parquet.column.statistics.Statistics",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getNumNulls","parameterTypes":[] }, 
    {"name":"isEmpty","parameterTypes":[] }, 
    {"name":"isNumNullsSet","parameterTypes":[] }
  ]
},
{
  "name":"org.apache.parquet.column.values.bitpacking.ByteBitPackingBE",
  "fields":[{"name":"factory"}]
},
{
  "name":"org.apache.parquet.column.values.bitpacking.ByteBitPackingForLongBE",
  "fields":[{"name":"factory"}]
},
{
  "name":"org.apache.parquet.column.values.bitpacking.ByteBitPackingForLongLE",
  "fields":[{"name":"factory"}]
},
{
  "name":"org.apache.parquet.column.values.bitpacking.ByteBitPackingLE",
  "fields":[{"name":"factory"}]
},
{
  "name":"org.apache.parquet.column.values.bitpacking.LemireBitPackingBE",
  "fields":[{"name":"factory"}]
},
{
  "name":"org.apache.parquet.column.values.bitpacking.LemireBitPackingLE",
  "fields":[{"name":"factory"}]
},
{
  "name":"org.apache.parquet.hadoop.codec.SnappyCodec",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"org.apache.parquet.hadoop.metadata.BlockMetaData",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getColumns","parameterTypes":[] }, 
    {"name":"getCompressedSize","parameterTypes":[] }, 
    {"name":"getOrdinal","parameterTypes":[] }, 
    {"name":"getPath","parameterTypes":[] }, 
    {"name":"getRowCount","parameterTypes":[] }, 
    {"name":"getRowIndexOffset","parameterTypes":[] }, 
    {"name":"getStartingPos","parameterTypes":[] }, 
    {"name":"getTotalByteSize","parameterTypes":[] }
  ]
},
{
  "name":"org.apache.parquet.hadoop.metadata.ColumnChunkMetaData",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getBloomFilterOffset","parameterTypes":[] }, 
    {"name":"getCodec","parameterTypes":[] }, 
    {"name":"getColumnIndexReference","parameterTypes":[] }, 
    {"name":"getEncodingStats","parameterTypes":[] }, 
    {"name":"getEncodings","parameterTypes":[] }, 
    {"name":"getOffsetIndexReference","parameterTypes":[] }, 
    {"name":"getPath","parameterTypes":[] }, 
    {"name":"getPrimitiveType","parameterTypes":[] }, 
    {"name":"getRowGroupOrdinal","parameterTypes":[] }, 
    {"name":"getStartingPos","parameterTypes":[] }, 
    {"name":"getType","parameterTypes":[] }, 
    {"name":"isEncrypted","parameterTypes":[] }
  ]
},
{
  "name":"org.apache.parquet.hadoop.metadata.ColumnPath",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.apache.parquet.hadoop.metadata.CompressionCodecName",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.parquet.hadoop.metadata.FileMetaData",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getCreatedBy","parameterTypes":[] }, 
    {"name":"getFileDecryptor","parameterTypes":[] }, 
    {"name":"getKeyValueMetaData","parameterTypes":[] }, 
    {"name":"getSchema","parameterTypes":[] }
  ]
},
{
  "name":"org.apache.parquet.hadoop.metadata.IntColumnChunkMetaData",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getDictionaryPageOffset","parameterTypes":[] }, 
    {"name":"getFirstDataPageOffset","parameterTypes":[] }, 
    {"name":"getStatistics","parameterTypes":[] }, 
    {"name":"getTotalSize","parameterTypes":[] }, 
    {"name":"getTotalUncompressedSize","parameterTypes":[] }, 
    {"name":"getValueCount","parameterTypes":[] }
  ]
},
{
  "name":"org.apache.parquet.hadoop.metadata.ParquetMetadata",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getBlocks","parameterTypes":[] }, 
    {"name":"getFileMetaData","parameterTypes":[] }
  ]
},
{
  "name":"org.apache.parquet.io.api.Binary",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"isBackingBytesReused","parameterTypes":[] }]
},
{
  "name":"org.apache.parquet.io.api.Binary$ByteArrayBackedBinary",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getBytes","parameterTypes":[] }, 
    {"name":"getBytesUnsafe","parameterTypes":[] }
  ]
},
{
  "name":"org.apache.parquet.schema.GroupType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getFieldCount","parameterTypes":[] }, 
    {"name":"getFields","parameterTypes":[] }, 
    {"name":"isPrimitive","parameterTypes":[] }
  ]
},
{
  "name":"org.apache.parquet.schema.LogicalTypeAnnotation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.parquet.schema.LogicalTypeAnnotation$StringLogicalTypeAnnotation",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.apache.parquet.schema.MessageType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getColumns","parameterTypes":[] }, 
    {"name":"getPaths","parameterTypes":[] }
  ]
},
{
  "name":"org.apache.parquet.schema.OriginalType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.parquet.schema.PrimitiveType",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[
    {"name":"getDecimalMetadata","parameterTypes":[] }, 
    {"name":"getPrimitiveTypeName","parameterTypes":[] }, 
    {"name":"getTypeLength","parameterTypes":[] }, 
    {"name":"isPrimitive","parameterTypes":[] }
  ]
},
{
  "name":"org.apache.parquet.schema.PrimitiveType$PrimitiveTypeName",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.parquet.schema.PrimitiveType$PrimitiveTypeName$1",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.parquet.schema.PrimitiveType$PrimitiveTypeName$3",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.parquet.schema.PrimitiveType$PrimitiveTypeName$4",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.parquet.schema.Type",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"getId","parameterTypes":[] }, 
    {"name":"getLogicalTypeAnnotation","parameterTypes":[] }, 
    {"name":"getName","parameterTypes":[] }, 
    {"name":"getOriginalType","parameterTypes":[] }, 
    {"name":"getRepetition","parameterTypes":[] }
  ]
},
{
  "name":"org.apache.parquet.schema.Type$ID",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true
},
{
  "name":"org.apache.parquet.schema.Type$Repetition",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.parquet.schema.Type$Repetition$2",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"org.apache.parquet.schema.Type$Repetition$3",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true
},
{
  "name":"picocli.CommandLine$HelpCommand",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"pq.App",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setVerbose","parameterTypes":["boolean"] }]
},
{
  "name":"pq.CountCommand",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"pq.FormatConverter",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"pq.MetadataCommand",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"pq.ReadCommand",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"pq.SchemaCommand",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"pq.WriteCommand",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"shaded.parquet.com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.misc.Unsafe",
  "allDeclaredFields":true,
  "methods":[{"name":"invokeCleaner","parameterTypes":["java.nio.ByteBuffer"] }]
},
{
  "name":"sun.security.provider.NativePRNG",
  "methods":[{"name":"<init>","parameterTypes":[] }]
},
{
  "name":"sun.security.provider.SHA",
  "methods":[{"name":"<init>","parameterTypes":[] }]
}
]
